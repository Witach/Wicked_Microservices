version: '3.5'

services:

  post-app:
      build: ./post-app
      networks:
        - social-app
      expose:
        - "8081"
      ports:
        - "8081:8080"
      restart: always
      environment:
        - SPRING_DATA_MONGODB_URI=mongodb://mongo-data/SocialApp
        - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://register-app:8761/eureka/
      depends_on:
        - mongo-data
        - register-app
        - config-app

  feed-app:
    build: ./feed-app
    networks:
      - social-app
    restart: always
    expose:
      - "8082"
    ports:
      - "8082:8080"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongo-data/SocialApp
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://register-app:8761/eureka/
    depends_on:
      - mongo-data
      - register-app
      - config-app

  profile-app:
    build: ./profile-app
    networks:
      - social-app
    restart: always
    expose:
      - "8083"
    ports:
      - "8083:8080"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongo-data/SocialApp
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://register-app:8761/eureka/
    depends_on:
      - mongo-data
      - register-app
      - config-app

  register-app:
    build: ./registry-server
    networks:
      - social-app
    expose:
      - "8761"
    ports:
      - "8761:8761"

  mongo-data:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo-data:/data/db
    expose:
      - "27017"
    ports:
      - "27017:27017"
    networks:
      - social-app
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  config-app:
    build: ./config-server
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://register-app:8761/eureka/
    expose:
      - "8888"
    ports:
      - "8888:8888"
    networks:
      - social-app
    depends_on:
      - register-app
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:8888/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  api-gateway:
    build: ./api-gatewat
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://register-app:8761/eureka/
    networks:
      - social-app
    ports:
      - "9090:9090"
    expose:
      - "9090"
    depends_on:
      - register-app
      - config-app

  key-cloak:
    image: jboss/keycloak
    environment:
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
    volumes:
      - type: bind
        source: ./volumes/keycloak
        target: /tmp
    networks:
      - social-app
    ports:
      - "8085:8080"
    expose:
      - 8085

  kafka:
    image: bitnami/kafka:latest
    volumes:
      - ./volumes/kafka:/bitnami/kafka
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
#      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=2
    networks:
      - social-app
    ports:
      - "9093:9092"
      - "9092:9092"
      - "8082:8082"
    expose:
      - "9093"
      - "9092"
      - "8082"
    depends_on:
      - zookeeper
#    profiles:
#      - kafka

  zookeeper:
    image: bitnami/zookeeper:latest
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - social-app
    ports:
      - "2181:2181"
    expose:
      - "2181"
  kafka-dashboard:
    image: provectuslabs/kafka-ui:latest
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=localhost:9092
    ports:
      - "8000:8080"
    expose:
        - "8000"
#    networks:
#        - social-app
    network_mode: bridge
#    profiles:
#      - kafka
#  kafka-client:
#    image: bitnami/kafka:latest
#    networks:
#      - social-app
#    environment:
#      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
#    command:
#      - kafka-topics.sh --list  --bootstrap-server kafka:9092
#    depends_on:
#      - zookeeper

networks:
  social-app:

volumes:
  mongo-data:
